name: Tests
on:
  push: 
    branches:
      - '**'

#default shell for all jobs
defaults:
  run:
    shell: bash

#Permissions set globally for jobs.
permissions: 
  contents: read
  id-token: write

env:
  AWS_REGION: 'us-east-1'
  AWS_DEFAULT_REGION: 'us-east-1'
  # AWS_ACCESS_KEY_ID: 
  # AWS_SECRET_ACCESS_KEY: 

jobs:
  build:
    runs-on: ubuntu-20.04
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Tooling
        run: |
          sudo apt-get -y update
          sudo apt-get -y install dnsutils curl

          sudo npm install -g react-scripts@latest
          sudo npm install -g serverless@1.83.3
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.14.7


      - name: Install dependencies
        run: |
          sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
          pnpm install

      - name: PNPM run Lint
        run: |
          cd solution/ui
          pnpm run lint

      - name: Run Test
        run: |
          cd solution/ui
          pnpm run test
      
      # Cypress tests are failing due to the following errors Error:error:0308010C:digital envelope routines::unsupported.
      # The latest version of node doesnâ€™t support unsecured negotiation {e.g. SSL V1}.
      # Please refer to https://us-sba.atlassian.net/browse/IA-3264 to fix the Cyprus tests.
      
      # - name: Run Cypress Test
      #   run: |
      #     cd solution/ui
      #     unset OPENSSL_CONF
      #     npm install -g node-fetch@2.6.1
      #     pnpm update
      #     pnpm audit --fix
      #     pnpm run cy-server-test


      # - name: Store Artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path:
      #       solution/ui/cypress/videos
      #       solution/ui/cypress/screenshots


# NOTES:
# Further investigation is needed in order to figure out how the code gets deployed in the upper environment.
# Till then do not run the `Export the Code` portion in order to avoid potentially breaking the already existing break even calculator.

      # - name: Export the code
      #   run: |
      #     serverless config credentials --provider aws --profile SBA-lower --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     cd scripts
      #     if [[ "master" == github.ref_name ]]; 
      #       then export TARGET="staging";
      #     else export TARGET=github.actor; fi
      #     source ./environment-deploy.sh ${TARGET}        
